apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'project-report'
apply plugin: 'semver'
apply plugin: 'com.jfrog.artifactory-upload'

sourceCompatibility = 1.7
project.version.with { major = 0; minor = 5; revision = 1 }
group = 'org.chdk.ptp.java'

buildscript
{
    repositories
    {
        maven{ url 'https://maven.man.poznan.pl/repository/kiwi-repo' }
        maven{ url 'http://oss.jfrog.org/artifactory/oss-snapshot-local' }
    }
    dependencies
    {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '3.0.x-SNAPSHOT')
        classpath(group: 'io.fugu.gradle', name: 'gradle-semver-plugin', version: '0.2.0-SNAPSHOT')
    }
}

repositories
{
    maven() { url 'https://maven.man.poznan.pl/repository/kiwi-repo' } // virtual repo
}

artifactory
{
    contextUrl = 'https://maven.man.poznan.pl/repository'
    publish
    {
        contextUrl = 'https://maven.man.poznan.pl/repository'
        //A closure defining publishing information
        repository {
            repoKey = 'kiwi-libs-snapshots'
            username = USER
            password = PASSWORD
        }
    }
    resolve {
        contextUrl = 'https://maven.man.poznan.pl/repository' //The base Artifactory URL for the resolver
        repository { repoKey = 'kiwi-repo'  //The Artifactory (preferably virtual) repository key to resolve from
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task testsJar(type: Jar, dependsOn: classes) {
    classifier = "tests"
    from sourceSets.test.allSource
    from sourceSets.test.output
}

artifacts {
    archives sourcesJar
    archives testsJar
}

dependencies
{
    // usb communication
    compile 'org.usb4java:usb4java-javax:1.2+'

    testCompile 'junit:junit:4.11+'
}